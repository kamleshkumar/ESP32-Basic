// ============================================================
// 🔥 SIMPLE ESP32 WIFI CONNECTION TEST CODE
// ============================================================

#include <WiFi.h>

// 🚨 UPDATE THESE CREDENTIALS 🚨
const char* ssid = "Dhruv5645645 645 6"; 
const char* password = "gfgsdgsdfg";

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  Serial.println("\n--- WiFi Connection Test ---");
  
  // Explicitly set the Wi-Fi mode to Station (client)
  WiFi.mode(WIFI_STA); 
  
  // Disconnect any previous connections before starting a new one
  WiFi.disconnect();
  delay(100); 
  
  Serial.print("Attempting to connect to SSID: ");
  Serial.println(ssid);
  
  // Start the connection process
  WiFi.begin(ssid, password);

  // Synchronously wait for the connection with a 30-second timeout
  int attempts = 0;
  int maxAttempts = 60; // 60 * 500ms = 30 seconds
  
  while (WiFi.status() != WL_CONNECTED && attempts < maxAttempts) {
    delay(500);
    Serial.print(".");
    attempts++;
  }

  // Check the final status after the loop ends
  if (WiFi.status() == WL_CONNECTED) {
    Serial.println("\n✅ WiFi Connected Successfully!");
    Serial.print("IP Address: ");
    Serial.println(WiFi.localIP());
    Serial.print("Signal Strength (RSSI): ");
    Serial.print(WiFi.RSSI());
    Serial.println(" dBm");
  } else {
    Serial.println("\n❌ Connection Failed!");
    Serial.print("Final Status Code: ");
    Serial.println(WiFi.status());
    Serial.println("Please double-check power, cable quality, and router settings.");
  }
}

void loop() {
  // Check for reconnection attempts if disconnected
  if (WiFi.status() != WL_CONNECTED) {
    // Attempt reconnection every 10 seconds
    static unsigned long lastAttempt = 0;
    if (millis() - lastAttempt > 10000) {
      Serial.println("\n--- Retrying WiFi connection... ---");
      WiFi.begin(ssid, password);
      lastAttempt = millis();
    }
    // Print the failure status every 1 second
    static unsigned long lastPrint = 0;
    if (millis() - lastPrint > 1000) {
      Serial.print("Disconnected. Status: ");
      Serial.println(WiFi.status());
      lastPrint = millis();
    }
  }
}
